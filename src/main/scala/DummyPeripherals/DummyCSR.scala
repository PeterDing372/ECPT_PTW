package ECPT.PTW.DummmyPeriphrals

import chisel3._
import chisel3.util._
import chisel3.withClock
import chisel3.internal.sourceinfo.SourceInfo
import chipsalliance.rocketchip.config._
// import ECPT.PTW._
import ECPT.Params._
import freechips.rocketchip.rocket._
import freechips.rocketchip.tile._

class DummyCSR (implicit p : Parameters) extends CoreModule()(p) {
  val io = IO(new Bundle {
    val dpath =  Flipped(new DatapathPTWIO)
  })

  
}
// class DatapathPTWIO(implicit p: Parameters) extends CoreBundle()(p)
//     with HasCoreParameters {
//   val ptbr = Input(new PTBR())
//   val hgatp = Input(new PTBR())
//   val vsatp = Input(new PTBR())
//   val sfence = Flipped(Valid(new SFenceReq))
//   val status = Input(new MStatus())
//   val hstatus = Input(new HStatus())
//   val gstatus = Input(new MStatus())
//   val pmp = Input(Vec(nPMPs, new PMP))
//   val perf = Output(new PTWPerfEvents())
//   val customCSRs = Input(coreParams.customCSRs)
//   /** enable clock generated by ptw */
//   val clock_enabled = Output(Bool())
// }
